name: release

on:
  push:
    tags:
    - 'release/*'

jobs:
  package:
    runs-on: ubuntu-latest
    container:
      image: docker://rust:1.37-buster
    steps:
    - name: git co
      uses: actions/checkout@v1

    - name: make package
      env:
        CARGO_RELEASE: 1
      run: PACKAGE_VERSION=$(echo $GITHUB_REF | sed -E 's,^refs/tags/release/,,') make package

    - uses: actions/upload-artifact@v1
      with:
        name: package
        path: target/release/package

  test:
    runs-on: ubuntu-latest
    container:
      image: docker://rust:1.37-buster
    steps:
    - name: git co
      uses: actions/checkout@v1
    - run: make test-integration

  publish:
    needs: [package, test]
    runs-on: ubuntu-latest
    steps:
    - name: fetch
      uses: actions/download-artifact@v1
      with:
        name: package
        path: package
    - name: release
      uses: docker://github/ghx:master
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      # ghx reads GITHUB_REF and then barfs on it, no matter its command-line
      # args. so just hide that env from it..
      with:
        entrypoint: sh -c
        args: |
          set -e
          cd package
          export TAG=$(echo $GITHUB_REF | sed -E 's,^refs/tags/release/,,')
          export NAME=$(echo $GITHUB_REF | sed -E 's,^refs/tags/,,')
          unset GITHUB_REF
          ghx release create --verbose --tag=$TAG --name=$NAME --ref=$GITHUB_SHA *

